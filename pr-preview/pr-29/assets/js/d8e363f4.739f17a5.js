"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[5460],{3444:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"guides/DevOps/helm-diff","title":"Helm Diff","description":"helm diff is a Helm plugin that shows differences between a Helm chart\'s current state","source":"@site/docs/guides/DevOps/helm-diff.mdx","sourceDirName":"guides/DevOps","slug":"/guides/DevOps/helm-diff","permalink":"/infra-portal/pr-preview/pr-29/docs/guides/DevOps/helm-diff","draft":false,"unlisted":false,"editUrl":"https://github.com/MapColonies/infra-portal/tree/master/docs/guides/DevOps/helm-diff.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Helm Diff","sidebar_position":1,"toc_min_heading_level":2,"toc_max_heading_level":6},"sidebar":"guidesSidebar","previous":{"title":"DevOps","permalink":"/infra-portal/pr-preview/pr-29/docs/category/devops"},"next":{"title":"Pipelines","permalink":"/infra-portal/pr-preview/pr-29/docs/guides/DevOps/pipelines"}}');var i=n(4848),s=n(8453);n(1470),n(9365);const l={title:"Helm Diff",sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:6},a=void 0,o={},c=[{value:"How to install",id:"how-to-install",level:2},{value:"On a computer with internet access",id:"on-a-computer-with-internet-access",level:3},{value:"On a computer without internet access",id:"on-a-computer-without-internet-access",level:3},{value:"How to use it",id:"how-to-use-it",level:2}];function u(e){const t={br:"br",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"helm diff"})," is a Helm plugin that shows differences between a Helm chart's current state\nin Kubernetes and its new configuration. This is helpful for previewing what changes will happen\nin a cluster before deploying them, allowing for safer updates by visually inspecting the intended\nmodifications. The plugin highlights added, modified, and deleted resources, making it easier to\nunderstand the impact of changes."]}),"\n",(0,i.jsx)(t.h2,{id:"how-to-install",children:"How to install"}),"\n",(0,i.jsx)(t.h3,{id:"on-a-computer-with-internet-access",children:"On a computer with internet access"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"helm plugin install https://github.com/databus23/helm-diff"})}),"\n",(0,i.jsx)(t.h3,{id:"on-a-computer-without-internet-access",children:"On a computer without internet access"}),"\n",(0,i.jsxs)(t.p,{children:["Assuming that you're working on your Windows workstation in the Outnet you can install the plugin\nby copying a few files into your ",(0,i.jsx)(t.code,{children:"HELM_PLUGINS"})," directory."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Go to the ",(0,i.jsx)(t.code,{children:"helm-diff"})," gitlab repo."]}),"\n",(0,i.jsxs)(t.li,{children:["Clone the ",(0,i.jsx)(t.code,{children:"helm-diff"})," gitlab repo to your workstation."]}),"\n",(0,i.jsxs)(t.li,{children:["In the root directory you'll find a directory called ",(0,i.jsx)(t.code,{children:"tar-gz"}),", ",(0,i.jsx)(t.code,{children:"cd"})," into this directory."]}),"\n",(0,i.jsxs)(t.li,{children:["Extract the ",(0,i.jsx)(t.code,{children:"helm-diff-windows-amd64.tgz"})]}),"\n",(0,i.jsxs)(t.li,{children:["Find out what's the ",(0,i.jsx)(t.code,{children:"HELM_PLUGINS"})," path configured on your computer by running ",(0,i.jsx)(t.code,{children:"helm env"}),", in the out output you'll find all the helm env vars, copy the path."]}),"\n",(0,i.jsxs)(t.li,{children:["If the ",(0,i.jsx)(t.code,{children:"HELM_PLUGINS"})," doesn't exist create it."]}),"\n",(0,i.jsxs)(t.li,{children:["Create a directory ",(0,i.jsx)(t.code,{children:"helm-diff"})," under the ",(0,i.jsx)(t.code,{children:"HELM_PLUGINS"})," path."]}),"\n",(0,i.jsxs)(t.li,{children:["From the extracted ",(0,i.jsx)(t.code,{children:"tgz"})," file, copy the ",(0,i.jsx)(t.code,{children:"bin"})," directory and the ",(0,i.jsx)(t.code,{children:"plugin.yaml"})," into the ",(0,i.jsx)(t.code,{children:"HELM_PLUGINS"}),"/",(0,i.jsx)(t.code,{children:"helm-diff"})," directory."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Now you have ",(0,i.jsx)(t.code,{children:"helm-diff"})," plugin installed on your Windows workstation."]}),"\n",(0,i.jsx)(t.h2,{id:"how-to-use-it",children:"How to use it"}),"\n",(0,i.jsxs)(t.p,{children:["Assuming that your chart name is ",(0,i.jsx)(t.code,{children:"foo"})," and your values file name is ",(0,i.jsx)(t.code,{children:"dev-values.yaml"}),"\nrun the following from the Chart directory you wish to upgrade.",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.code,{children:"helm diff upgrade foo --values dev-values.yaml ."}),(0,i.jsx)(t.br,{}),"\n","You can also specify multiple values files:",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.code,{children:"helm diff upgrade foo --values dev-values.yaml --values dev1-values.yaml ."}),(0,i.jsx)(t.br,{}),"\n","If there's a difference, the output will show all the diffs between the k8s objects which will be modified/create/deleted."]}),"\n",(0,i.jsxs)(t.p,{children:["Here's an example of the ",(0,i.jsx)(t.code,{children:"helm diff"})," output\n",(0,i.jsx)(t.img,{alt:"Helm diff",src:n(3546).A+"",width:"1412",height:"1044"})]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>l});n(6540);var r=n(4164);const i={tabItem:"tabItem_Ymn6"};var s=n(4848);function l(e){let{children:t,hidden:n,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,l),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>y});var r=n(6540),i=n(4164),s=n(3104),l=n(6347),a=n(205),o=n(7485),c=n(1682),u=n(679);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:i}}=e;return{value:t,label:n,attributes:r,default:i}}))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function f(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:n}=e;const i=(0,l.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(i.location.search);t.set(s,e),i.replace({...i.location,search:t.toString()})}),[s,i])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,s=h(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[c,d]=p({queryString:n,groupId:i}),[m,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,s]=(0,u.Dv)(n);return[i,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:i}),v=(()=>{const e=c??m;return f({value:e,tabValues:s})?e:null})();(0,a.A)((()=>{v&&o(v)}),[v]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var b=n(2303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(4848);function x(e){let{className:t,block:n,selectedValue:r,selectValue:l,tabValues:a}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const t=e.currentTarget,n=o.indexOf(t),i=a[n].value;i!==r&&(c(t),l(i))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},t),children:a.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>o.push(e),onKeyDown:d,onClick:u,...s,className:(0,i.A)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function w(e){let{lazy:t,children:n,selectedValue:s}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function j(e){const t=m(e);return(0,g.jsxs)("div",{className:(0,i.A)("tabs-container",v.tabList),children:[(0,g.jsx)(x,{...t,...e}),(0,g.jsx)(w,{...t,...e})]})}function y(e){const t=(0,b.A)();return(0,g.jsx)(j,{...e,children:d(e.children)},String(t))}},3546:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/helm-diff-727507feb421384023f5ad4b346946e7.png"},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var r=n(6540);const i={},s=r.createContext(i);function l(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);