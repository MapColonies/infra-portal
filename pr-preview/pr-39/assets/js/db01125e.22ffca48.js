"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[2679],{636:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"knowledge-base/packages/openapi-helpers/typedoc/requestSender/functions/createRequestSender","title":"createRequestSender","description":"@map-colonies/openapi-helpers v2.1.0","source":"@site/docs/knowledge-base/packages/openapi-helpers/typedoc/requestSender/functions/createRequestSender.md","sourceDirName":"knowledge-base/packages/openapi-helpers/typedoc/requestSender/functions","slug":"/knowledge-base/packages/openapi-helpers/typedoc/requestSender/functions/createRequestSender","permalink":"/infra-portal/pr-preview/pr-39/docs/knowledge-base/packages/openapi-helpers/typedoc/requestSender/functions/createRequestSender","draft":false,"unlisted":false,"editUrl":"https://github.com/MapColonies/infra-portal/tree/master/docs/knowledge-base/packages/openapi-helpers/typedoc/requestSender/functions/createRequestSender.md","tags":[],"version":"current","frontMatter":{},"sidebar":"knowledgeBaseSidebar","previous":{"title":"RequestSender","permalink":"/infra-portal/pr-preview/pr-39/docs/knowledge-base/packages/openapi-helpers/typedoc/requestSender/type-aliases/RequestSender"},"next":{"title":"index","permalink":"/infra-portal/pr-preview/pr-39/docs/knowledge-base/packages/openapi-helpers/typedoc/typedRequestHandler/"}}');var t=s(4848),p=s(8453);const i={},a=void 0,o={},d=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"openapiFilePath",id:"openapifilepath",level:3},{value:"app",id:"app",level:3},{value:"options?",id:"options",level:3},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,p.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-39/docs/knowledge-base/packages/openapi-helpers/typedoc/",children:(0,t.jsx)(n.strong,{children:"@map-colonies/openapi-helpers v2.1.0"})})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h1,{id:"function-createrequestsender",children:"Function: createRequestSender()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"createRequestSender"}),"<",(0,t.jsx)(n.code,{children:"Paths"}),", ",(0,t.jsx)(n.code,{children:"Operations"}),">(",(0,t.jsx)(n.code,{children:"openapiFilePath"}),", ",(0,t.jsx)(n.code,{children:"app"}),", ",(0,t.jsx)(n.code,{children:"options"}),"?): ",(0,t.jsx)(n.code,{children:"Promise"}),"<",(0,t.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-39/docs/knowledge-base/packages/openapi-helpers/typedoc/requestSender/type-aliases/RequestSender",children:(0,t.jsx)(n.code,{children:"RequestSender"})}),"<",(0,t.jsx)(n.code,{children:"Paths"}),", ",(0,t.jsx)(n.code,{children:"Operations"}),">>"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Defined in: ",(0,t.jsx)(n.a,{href:"https://github.com/MapColonies/openapi-helpers/blob/05f7b12225ca628984686a05529bc17d6dbd4723/src/requestSender/requestSender.ts#L131",children:"requestSender/requestSender.ts:131"})]}),"\n",(0,t.jsx)(n.p,{children:"Creates a request sender object that can be used to send fake HTTP requests using supertest based on an OpenAPI specification.\nThe openapi types should be generated using the openapi-typescript package."}),"\n",(0,t.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"Paths"})," ",(0,t.jsx)(n.em,{children:"extends"})," ",(0,t.jsx)(n.code,{children:"PathsTemplate"})," = ",(0,t.jsx)(n.code,{children:"never"})]}),"\n",(0,t.jsx)(n.p,{children:"The type representing the paths defined in the OpenAPI specification."}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"Operations"})," ",(0,t.jsx)(n.em,{children:"extends"})," ",(0,t.jsx)(n.code,{children:"OperationsTemplate"})," = ",(0,t.jsx)(n.code,{children:"never"})]}),"\n",(0,t.jsx)(n.p,{children:"The type representing the operations defined in the OpenAPI specification."}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h3,{id:"openapifilepath",children:"openapiFilePath"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Operations"})," ",(0,t.jsx)(n.em,{children:"extends"})," ",(0,t.jsx)(n.code,{children:"never"})," ? ",(0,t.jsx)(n.code,{children:"never"})," : ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsx)(n.p,{children:"The file path to the OpenAPI specification file."}),"\n",(0,t.jsx)(n.h3,{id:"app",children:"app"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Application"})}),"\n",(0,t.jsx)(n.p,{children:"The Express application instance."}),"\n",(0,t.jsx)(n.h3,{id:"options",children:"options?"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"RequestSenderOptions"})," = ",(0,t.jsx)(n.code,{children:"{}"})]}),"\n",(0,t.jsx)(n.p,{children:"Optional configuration options for the request sender."}),"\n",(0,t.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Promise"}),"<",(0,t.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-39/docs/knowledge-base/packages/openapi-helpers/typedoc/requestSender/type-aliases/RequestSender",children:(0,t.jsx)(n.code,{children:"RequestSender"})}),"<",(0,t.jsx)(n.code,{children:"Paths"}),", ",(0,t.jsx)(n.code,{children:"Operations"}),">>"]}),"\n",(0,t.jsx)(n.p,{children:"A promise that resolves to a RequestSender object."}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import express from 'express';\nimport { createRequestSender } from './requestSender';\nimport type { paths, operations } from './openapi';\n\nconst app = express();\nconst openapiFilePath = './openapi3.yaml';\n\nconst requestSender = await createRequestSender<paths, operations>(openapiFilePath, app);\n\n// Using operation name\nconst response1 = await requestSender.getUsers();\n\n// Using path and method\nconst response2 = await requestSender.sendRequest({\n  method: 'get',\n  path: '/simple-request'\n});\n"})})]})}function l(e={}){const{wrapper:n}={...(0,p.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var r=s(6540);const t={},p=r.createContext(t);function i(e){const n=r.useContext(p);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(p.Provider,{value:n},e.children)}}}]);