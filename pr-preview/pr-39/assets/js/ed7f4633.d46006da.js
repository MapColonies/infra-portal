"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[9855],{3118:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"knowledge-base/ts-server-boilerplate/tests","title":"Tests","description":"The tests for the boilerplate are written using Jest. The tests are located in the tests directory and are divided into two main categories:","source":"@site/docs/knowledge-base/ts-server-boilerplate/tests.md","sourceDirName":"knowledge-base/ts-server-boilerplate","slug":"/knowledge-base/ts-server-boilerplate/tests","permalink":"/infra-portal/pr-preview/pr-39/docs/knowledge-base/ts-server-boilerplate/tests","draft":false,"unlisted":false,"editUrl":"https://github.com/MapColonies/infra-portal/tree/master/docs/knowledge-base/ts-server-boilerplate/tests.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"tests","title":"Tests","sidebar_position":2},"sidebar":"knowledgeBaseSidebar","previous":{"title":"Code","permalink":"/infra-portal/pr-preview/pr-39/docs/knowledge-base/ts-server-boilerplate/code"},"next":{"title":"Repo configuration and validation","permalink":"/infra-portal/pr-preview/pr-39/docs/knowledge-base/ts-server-boilerplate/repo"}}');var i=s(4848),r=s(8453);const o={id:"tests",title:"Tests",sidebar_position:2},a=void 0,c={},l=[{value:"Running the tests",id:"running-the-tests",level:2},{value:"Features",id:"features",level:2},{value:"Typescript and swc",id:"typescript-and-swc",level:3},{value:"Configuration files",id:"configuration-files",level:3},{value:"jest-openapi",id:"jest-openapi",level:3},{value:"openapi-helpers",id:"openapi-helpers",level:3},{value:"ESLint",id:"eslint",level:3},{value:"Coverage",id:"coverage",level:3},{value:"Reporters",id:"reporters",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The tests for the boilerplate are written using ",(0,i.jsx)(t.a,{href:"https://jestjs.io/",children:"Jest"}),". The tests are located in the ",(0,i.jsx)(t.code,{children:"tests"})," directory and are divided into two main categories:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Unit tests"}),"\n",(0,i.jsx)(t.li,{children:"Integration tests"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["For more information on how to write tests using Jest, check the ",(0,i.jsx)(t.a,{href:"https://jestjs.io/docs/getting-started",children:"official Jest documentation"}),".\nFor JavaScript testing best practices check this guide by ",(0,i.jsx)(t.a,{href:"https://github.com/goldbergyoni/javascript-testing-best-practices",children:"Yoni Goldberg"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"running-the-tests",children:"Running the tests"}),"\n",(0,i.jsx)(t.p,{children:"To run the tests, use the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"npm run test\n"})}),"\n",(0,i.jsx)(t.p,{children:"It will run both the unit tests and the integration tests."}),"\n",(0,i.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,i.jsx)(t.h3,{id:"typescript-and-swc",children:"Typescript and swc"}),"\n",(0,i.jsxs)(t.p,{children:["The tests are written in TypeScript and compiled using ",(0,i.jsx)(t.a,{href:"https://swc.rs/",children:"swc"}),". Before running the tests, we type check the code using the TypeScript compiler.\nBy using swc, we can compile the TypeScript code to JavaScript faster than using the TypeScript compiler. For path alias support, we use the mapper provided by the ",(0,i.jsx)(t.code,{children:"ts-jest"})," package."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["If you need to change swc settings, it can be done by editing the ",(0,i.jsx)(t.code,{children:".swcrc"})," file."]})}),"\n",(0,i.jsx)(t.h3,{id:"configuration-files",children:"Configuration files"}),"\n",(0,i.jsxs)(t.p,{children:["The configuration files for Jest are located in the ",(0,i.jsx)(t.code,{children:"tests"})," directory:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"configuration/unit/jest.config.js"}),": Configuration file for the unit tests."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"configuration/integration/jest.config.js"}),": Configuration file for the integration tests."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Those files contain the configuration for Jest, including the setup files, the test environment, and the test matchers.\nFor more information on Jest configuration, check the ",(0,i.jsx)(t.a,{href:"https://jestjs.io/docs/configuration",children:"official Jest documentation"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"jest-openapi",children:"jest-openapi"}),"\n",(0,i.jsxs)(t.p,{children:["The boilerplate includes the ",(0,i.jsx)(t.a,{href:"https://www.npmjs.com/package/jest-openapi",children:(0,i.jsx)(t.code,{children:"jest-openapi"})})," package to test the API endpoints against an OpenAPI schema."]}),"\n",(0,i.jsx)(t.p,{children:"To run the tests, add the following matcher to your test"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"expect(response).toSatisfyApiSpec();\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"warning",children:(0,i.jsx)(t.p,{children:"If you don't assert on the status code, the check might pass even if the response doesn't match the schema, as it compares to all possible responses."})}),"\n",(0,i.jsx)(t.h3,{id:"openapi-helpers",children:"openapi-helpers"}),"\n",(0,i.jsxs)(t.p,{children:["To ease the integration testings of your service, the boilerplate includes the ",(0,i.jsx)(t.code,{children:"openapi-helpers"}),' package.\nThe package provides a set of functions and types based on your OpenAPI schema to help you write integration tests.\nWhen initialized, a "request sender" is created, which is a function that sends requests to your service based on the OpenAPI schema.']}),"\n",(0,i.jsxs)(t.p,{children:["For complete documentation, check the ",(0,i.jsx)(t.a,{href:"/infra-portal/pr-preview/pr-39/docs/knowledge-base/packages/openapi-helpers/",children:"package page"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"eslint",children:"ESLint"}),"\n",(0,i.jsxs)(t.p,{children:["Linting for the tests is done using ",(0,i.jsx)(t.code,{children:"ESLint"}),", the MapColonies\u2122 ESLint configuration, and the ",(0,i.jsx)(t.code,{children:"eslint-plugin-jest"})," package.\nCheck ",(0,i.jsx)(t.a,{href:"https://github.com/jest-community/eslint-plugin-jest",children:"eslint-plugin-jest"})," for all available rules, and ",(0,i.jsx)(t.a,{href:"/infra-portal/pr-preview/pr-39/docs/knowledge-base/packages/eslint-config/",children:"MapColonies ESLint configuration"})," for the rules that are enabled."]}),"\n",(0,i.jsx)(t.h3,{id:"coverage",children:"Coverage"}),"\n",(0,i.jsx)(t.p,{children:"The tests are configured with coverage requirements to ensure that the code is well tested. The coverage threshold can be changed in the tests configuration files."}),"\n",(0,i.jsxs)(t.p,{children:["You can see the coverage report in the CLI after running the tests. The coverage report is also saved in the ",(0,i.jsx)(t.code,{children:"coverage"})," directory."]}),"\n",(0,i.jsx)(t.h3,{id:"reporters",children:"Reporters"}),"\n",(0,i.jsxs)(t.p,{children:["The tests are configured to output an HTML report in addition to the default Jest output. The HTML report is saved in the ",(0,i.jsx)(t.code,{children:"reports"})," directory."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var n=s(6540);const i={},r=n.createContext(i);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);