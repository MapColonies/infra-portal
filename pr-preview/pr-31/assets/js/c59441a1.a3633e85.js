"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[3947],{1114:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"knowledge-base/packages/express-access-log-middleware/README","title":"express-access-log-middleware","description":"An access and error logger for express based on pino-http","source":"@site/docs/knowledge-base/packages/express-access-log-middleware/README.md","sourceDirName":"knowledge-base/packages/express-access-log-middleware","slug":"/knowledge-base/packages/express-access-log-middleware/","permalink":"/infra-portal/pr-preview/pr-31/docs/knowledge-base/packages/express-access-log-middleware/","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"custom_edit_url":null},"sidebar":"knowledgeBaseSidebar","previous":{"title":"Map Colonies ESLint configs","permalink":"/infra-portal/pr-preview/pr-31/docs/knowledge-base/packages/eslint-config/"},"next":{"title":"js logger","permalink":"/infra-portal/pr-preview/pr-31/docs/knowledge-base/packages/js-logger/"}}');var t=s(4848),o=s(8453);const d={custom_edit_url:null},c="express-access-log-middleware",i={},l=[{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"express-access-log-middleware",children:"express-access-log-middleware"})}),"\n",(0,t.jsx)(n.p,{children:"An access and error logger for express based on pino-http"}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import * as express from 'express';\nimport jsLogger from '@map-colonies/js-logger';\nimport httpLogger from '@map-colonies/express-access-log-middleware';\n\nconst app = express()\n\nconst logger = jsLogger();\n\napp.use(jsLogger({logger}));\n\napp.get('/', (req,res) => {\n  res.json(hello: 'world');\n});\n\napp.listen(8080);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["for more detailed usage check the ",(0,t.jsx)(n.a,{href:"https://github.com/pinojs/pino-http",children:"pino-http documentation"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"name"}),(0,t.jsx)(n.th,{children:"type"}),(0,t.jsx)(n.th,{children:"default value"}),(0,t.jsx)(n.th,{children:"description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"logger"}),(0,t.jsx)(n.td,{children:"Logger"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"The logger instance to use"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ignorePaths"}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"undefined"}),(0,t.jsx)(n.td,{children:"The paths to ignore logging"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"customLogLevel"}),(0,t.jsx)(n.td,{children:"(res, err) => log_level"}),(0,t.jsx)(n.td,{children:"info for all under 500 status"}),(0,t.jsx)(n.td,{children:"A function to set the log level of a request"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"customSuccessMessage"}),(0,t.jsx)(n.td,{children:"(res: ServerResponse) => string"}),(0,t.jsx)(n.td,{children:"undefined"}),(0,t.jsx)(n.td,{children:"function to set the success message"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"customSuccessObject"}),(0,t.jsx)(n.td,{children:"(req: IncomingMessage, res: ServerResponse, val: any) => object"}),(0,t.jsx)(n.td,{children:"undefined"}),(0,t.jsx)(n.td,{children:"function to set the success object"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"customErrorMessage"}),(0,t.jsx)(n.td,{children:"(error: Error, res: ServerResponse) => string"}),(0,t.jsx)(n.td,{children:"undefined"}),(0,t.jsx)(n.td,{children:"function to set the error message"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"customErrorObject"}),(0,t.jsx)(n.td,{children:"(req: IncomingMessage, res: ServerResponse, error: Error) => object"}),(0,t.jsx)(n.td,{children:"undefined"}),(0,t.jsx)(n.td,{children:"function to set the error object"})]})]})]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This page was generated from a remote source. you can find it on ",(0,t.jsx)(n.a,{href:"https://github.com/MapColonies/express-access-log-middleware/blob/master/README.md",children:"https://github.com/MapColonies/express-access-log-middleware/blob/master/README.md"})]})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var r=s(6540);const t={},o=r.createContext(t);function d(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);