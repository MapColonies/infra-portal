"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[6493],{3255:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"knowledge-base/packages/js-logger/README","title":"js logger","description":"Javascript and typescript logger for MapColonies based on pino.","source":"@site/docs/knowledge-base/packages/js-logger/README.md","sourceDirName":"knowledge-base/packages/js-logger","slug":"/knowledge-base/packages/js-logger/","permalink":"/infra-portal/pr-preview/pr-31/docs/knowledge-base/packages/js-logger/","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"custom_edit_url":null},"sidebar":"knowledgeBaseSidebar","previous":{"title":"express-access-log-middleware","permalink":"/infra-portal/pr-preview/pr-31/docs/knowledge-base/packages/express-access-log-middleware/"},"next":{"title":"ts-npm-package-boilerplate","permalink":"/infra-portal/pr-preview/pr-31/docs/knowledge-base/packages/openapi-express-viewer/"}}');var s=r(4848),o=r(8453);const l={custom_edit_url:null},d="js logger",i={},a=[{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"js-logger",children:"js logger"})}),"\n",(0,s.jsx)(n.p,{children:"Javascript and typescript logger for MapColonies based on pino."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import jsLogger from '@map-colonies/js-logger';\n\nconst logger = jsLogger();\n\nlogger.info('hello world');\n\nlogger.error({hello: 'world'});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["for more detailed usage check the ",(0,s.jsx)(n.a,{href:"https://github.com/pinojs/pino",children:"pino documentation"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"name"}),(0,s.jsx)(n.th,{children:"type"}),(0,s.jsx)(n.th,{children:"default value"}),(0,s.jsx)(n.th,{children:"description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"enabled"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"true"}),(0,s.jsx)(n.td,{children:"enables logging"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"level"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"'info'"}),(0,s.jsx)(n.td,{children:"one of the supported level or silent to disable logging"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"prettyPrint"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"pretty print for developing purposes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"redact"}),(0,s.jsx)(n.td,{children:"array"}),(0,s.jsx)(n.td,{children:"undefined"}),(0,s.jsx)(n.td,{children:"array of paths in object to be redacted from the log"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"destination"}),(0,s.jsx)(n.td,{children:"number / string"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"The stream to send the log to, or file"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"base"}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"{pid: process.pid, hostname: os.hostname}"}),(0,s.jsx)(n.td,{children:"Key-value object added as child logger to each log line"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"pinoCaller"}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"adds the call site of each log message to the log output"})]})]})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["This page was generated from a remote source. you can find it on ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/js-logger/blob/master/README.md",children:"https://github.com/MapColonies/js-logger/blob/master/README.md"})]})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>d});var t=r(6540);const s={},o=t.createContext(s);function l(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);