"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[1514],{4289:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"knowledge-base/config-management/default-configs","title":"Default configs","description":"What are default configs?","source":"@site/docs/knowledge-base/config-management/default-configs.md","sourceDirName":"knowledge-base/config-management","slug":"/knowledge-base/config-management/default-configs","permalink":"/infra-portal/pr-preview/pr-43/docs/knowledge-base/config-management/default-configs","draft":false,"unlisted":false,"editUrl":"https://github.com/MapColonies/infra-portal/tree/master/docs/knowledge-base/config-management/default-configs.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Default configs","sidebar_position":3,"toc_min_heading_level":2,"toc_max_heading_level":2},"sidebar":"knowledgeBaseSidebar","previous":{"title":"References","permalink":"/infra-portal/pr-preview/pr-43/docs/knowledge-base/config-management/references"},"next":{"title":"JSON Schema","permalink":"/infra-portal/pr-preview/pr-43/docs/category/json-schema"}}');var o=a(4848),i=a(8453);const s={title:"Default configs",sidebar_position:3,toc_min_heading_level:2,toc_max_heading_level:2},r=void 0,c={},l=[{value:"What are default configs?",id:"what-are-default-configs",level:2},{value:"How do I define a default config?",id:"how-do-i-define-a-default-config",level:2}];function f(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"what-are-default-configs",children:"What are default configs?"}),"\n",(0,o.jsx)(n.p,{children:"default configs are configs we define when creating our schema that will be deployed to the config-server when the server is started for the first time. This is useful as it makes it easier to manage configurations in a more organized way and make the deployment a breeze."}),"\n",(0,o.jsxs)(n.p,{children:["Default configs support ",(0,o.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-43/docs/knowledge-base/config-management/references",children:"references"})," to other default configs, so you can reuse configurations in multiple places."]}),"\n",(0,o.jsx)(n.h2,{id:"how-do-i-define-a-default-config",children:"How do I define a default config?"}),"\n",(0,o.jsxs)(n.p,{children:["To define a default config, you need to create a file in the same folder as the schema, with the same version as the schema. For example if the schema is in ",(0,o.jsx)(n.code,{children:"schemas/my-schema/v1.schema.json"}),", the default config should be in ",(0,o.jsx)(n.code,{children:"config/my-schema/v1.configs.json"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Each file supports multiple configs, as long as their name is unique across all the configs in the schemas repo."}),"\n",(0,o.jsx)(n.p,{children:"The file is enforced with the following schema, with the value enforced by the schema of the config:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "type": "array",\n  "items": {\n    "type": "object",\n    "properties": {\n      "name": {\n        "type": "string"\n      },\n      "value": {}\n    },\n    "required": ["name", "value"]\n  },\n  "minItems": 1\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(f,{...e})}):f(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>r});var t=a(6540);const o={},i=t.createContext(o);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);