"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[5602],{336:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"knowledge-base/packages/telemetry/typedoc/Main/interfaces/MetricsOptions","title":"MetricsOptions","description":"@map-colonies/telemetry v10.0.1","source":"@site/docs/knowledge-base/packages/telemetry/typedoc/Main/interfaces/MetricsOptions.md","sourceDirName":"knowledge-base/packages/telemetry/typedoc/Main/interfaces","slug":"/knowledge-base/packages/telemetry/typedoc/Main/interfaces/MetricsOptions","permalink":"/infra-portal/pr-preview/pr-38/docs/knowledge-base/packages/telemetry/typedoc/Main/interfaces/MetricsOptions","draft":false,"unlisted":false,"editUrl":"https://github.com/MapColonies/infra-portal/tree/master/docs/knowledge-base/packages/telemetry/typedoc/Main/interfaces/MetricsOptions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"knowledgeBaseSidebar","previous":{"title":"Metrics","permalink":"/infra-portal/pr-preview/pr-38/docs/knowledge-base/packages/telemetry/typedoc/Main/classes/Metrics"},"next":{"title":"Tracing","permalink":"/infra-portal/pr-preview/pr-38/docs/knowledge-base/packages/telemetry/typedoc/Main/classes/Tracing"}}');var s=i(4848),t=i(8453);const c={},o=void 0,l={},d=[{value:"Extends",id:"extends",level:2},{value:"Properties",id:"properties",level:2},{value:"attributes?",id:"attributes",level:3},{value:"debug?",id:"debug",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"hostname?",id:"hostname",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"isEnabled?",id:"isenabled",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"sendInterval?",id:"sendinterval",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"serviceName?",id:"servicename",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"serviceVersion?",id:"serviceversion",level:3},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"url?",id:"url",level:3},{value:"Inherited from",id:"inherited-from-6",level:4}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-38/docs/knowledge-base/packages/telemetry/typedoc/",children:(0,s.jsx)(n.strong,{children:"@map-colonies/telemetry v10.0.1"})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"interface-metricsoptions",children:"Interface: MetricsOptions"}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/1fc7fae4979fb6f94138b60abf2c789f2922b13d/src/metrics/metrics.ts#L17",children:"metrics/metrics.ts:17"})]}),"\n",(0,s.jsx)(n.p,{children:"Configuration options for metrics collection.\nExtends the base metrics configuration with optional parameters."}),"\n",(0,s.jsx)(n.p,{children:"MetricsOptions"}),"\n",(0,s.jsx)(n.h2,{id:"extends",children:"Extends"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Partial"}),"<",(0,s.jsx)(n.code,{children:"MetricsConfig"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"attributes",children:"attributes?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"attributes"}),": ",(0,s.jsx)(n.code,{children:"Attributes"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/1fc7fae4979fb6f94138b60abf2c789f2922b13d/src/metrics/metrics.ts#L21",children:"metrics/metrics.ts:21"})]}),"\n",(0,s.jsx)(n.p,{children:"Optional attributes to be associated with the metrics."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"debug",children:"debug?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"debug"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/1fc7fae4979fb6f94138b60abf2c789f2922b13d/src/metrics/config.ts#L27",children:"metrics/config.ts:27"})]}),"\n",(0,s.jsx)(n.p,{children:"Specifies whether to enable debug mode for metrics.\nDebug mode will enable the opentelemetry debug log and log metrics to the console."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Partial.debug"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"hostname",children:"hostname?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"hostname"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/1fc7fae4979fb6f94138b60abf2c789f2922b13d/src/common/config.ts#L19",children:"common/config.ts:19"})]}),"\n",(0,s.jsx)(n.p,{children:"The value of the hostname attribute to use, will override the hostname."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Partial.hostname"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isenabled",children:"isEnabled?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"isEnabled"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/1fc7fae4979fb6f94138b60abf2c789f2922b13d/src/metrics/config.ts#L14",children:"metrics/config.ts:14"})]}),"\n",(0,s.jsx)(n.p,{children:"Specifies whether metrics is enabled."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-2",children:"Inherited from"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Partial.isEnabled"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"sendinterval",children:"sendInterval?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"sendInterval"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/1fc7fae4979fb6f94138b60abf2c789f2922b13d/src/metrics/config.ts#L22",children:"metrics/config.ts:22"})]}),"\n",(0,s.jsx)(n.p,{children:"The interval in milliseconds to send the metrics."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-3",children:"Inherited from"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Partial.sendInterval"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"servicename",children:"serviceName?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"serviceName"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/1fc7fae4979fb6f94138b60abf2c789f2922b13d/src/common/config.ts#L15",children:"common/config.ts:15"})]}),"\n",(0,s.jsx)(n.p,{children:"The name of the service to put as attribute.\nBy default will be read from the package.json file."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-4",children:"Inherited from"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Partial.serviceName"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"serviceversion",children:"serviceVersion?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"serviceVersion"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/1fc7fae4979fb6f94138b60abf2c789f2922b13d/src/common/config.ts#L24",children:"common/config.ts:24"})]}),"\n",(0,s.jsx)(n.p,{children:"The version of the service to put as attribute.\nBy default will be read from the package.json file."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-5",children:"Inherited from"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Partial.serviceVersion"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"url",children:"url?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"url"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/1fc7fae4979fb6f94138b60abf2c789f2922b13d/src/metrics/config.ts#L18",children:"metrics/config.ts:18"})]}),"\n",(0,s.jsx)(n.p,{children:"The URL to an HTTP OTLP endpoint to send the metrics to."}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-6",children:"Inherited from"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Partial.url"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);