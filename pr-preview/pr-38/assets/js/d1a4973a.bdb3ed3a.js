"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[2977],{4888:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>n,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"knowledge-base/packages/telemetry/typedoc/Metrics Middlewares/functions/metricsMiddleware","title":"metricsMiddleware","description":"@map-colonies/telemetry v10.0.1","source":"@site/docs/knowledge-base/packages/telemetry/typedoc/Metrics Middlewares/functions/metricsMiddleware.md","sourceDirName":"knowledge-base/packages/telemetry/typedoc/Metrics Middlewares/functions","slug":"/knowledge-base/packages/telemetry/typedoc/Metrics Middlewares/functions/metricsMiddleware","permalink":"/infra-portal/pr-preview/pr-38/docs/knowledge-base/packages/telemetry/typedoc/Metrics Middlewares/functions/metricsMiddleware","draft":false,"unlisted":false,"editUrl":"https://github.com/MapColonies/infra-portal/tree/master/docs/knowledge-base/packages/telemetry/typedoc/Metrics Middlewares/functions/metricsMiddleware.md","tags":[],"version":"current","frontMatter":{},"sidebar":"knowledgeBaseSidebar","previous":{"title":"d\u0336e\u0336f\u0336a\u0336u\u0336l\u0336t\u0336M\u0336e\u0336t\u0336r\u0336i\u0336c\u0336s\u0336M\u0336i\u0336d\u0336d\u0336l\u0336e\u0336w\u0336a\u0336r\u0336e\u0336","permalink":"/infra-portal/pr-preview/pr-38/docs/knowledge-base/packages/telemetry/typedoc/Metrics Middlewares/functions/defaultMetricsMiddleware"},"next":{"title":"tsconfig","permalink":"/infra-portal/pr-preview/pr-38/docs/knowledge-base/packages/tsconfig/"}}');var i=t(4848),d=t(8453);const l={},c=void 0,n={},a=[{value:"Parameters",id:"parameters",level:2},{value:"registry",id:"registry",level:3},{value:"shouldCollectDefaultMetrics",id:"shouldcollectdefaultmetrics",level:3},{value:"defaultMetricsPrefix?",id:"defaultmetricsprefix",level:3},{value:"defaultMetricsLabels?",id:"defaultmetricslabels",level:3},{value:"Returns",id:"returns",level:2}];function o(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"/infra-portal/pr-preview/pr-38/docs/knowledge-base/packages/telemetry/typedoc/",children:(0,i.jsx)(r.strong,{children:"@map-colonies/telemetry v10.0.1"})})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h1,{id:"function-metricsmiddleware",children:"Function: metricsMiddleware()"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"metricsMiddleware"}),"(",(0,i.jsx)(r.code,{children:"registry"}),", ",(0,i.jsx)(r.code,{children:"shouldCollectDefaultMetrics"}),", ",(0,i.jsx)(r.code,{children:"defaultMetricsPrefix"}),"?, ",(0,i.jsx)(r.code,{children:"defaultMetricsLabels"}),"?): ",(0,i.jsx)(r.code,{children:"express.RequestHandler"})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Defined in: ",(0,i.jsx)(r.a,{href:"https://github.com/MapColonies/telemetry/blob/1fc7fae4979fb6f94138b60abf2c789f2922b13d/src/metrics/middleware/metrics.ts#L63",children:"metrics/middleware/metrics.ts:63"})]}),"\n",(0,i.jsx)(r.p,{children:"Express middleware that returns the metrics collected by the registry."}),"\n",(0,i.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(r.h3,{id:"registry",children:"registry"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"Registry"})}),"\n",(0,i.jsx)(r.p,{children:"The metrics registry."}),"\n",(0,i.jsx)(r.h3,{id:"shouldcollectdefaultmetrics",children:"shouldCollectDefaultMetrics"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"boolean"})," = ",(0,i.jsx)(r.code,{children:"true"})]}),"\n",(0,i.jsxs)(r.p,{children:["Indicates whether to collect default metrics. Default is ",(0,i.jsx)(r.code,{children:"true"}),"."]}),"\n",(0,i.jsx)(r.h3,{id:"defaultmetricsprefix",children:"defaultMetricsPrefix?"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"string"})}),"\n",(0,i.jsx)(r.p,{children:"The prefix to be added to default metrics."}),"\n",(0,i.jsx)(r.h3,{id:"defaultmetricslabels",children:"defaultMetricsLabels?"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Record"}),"<",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),">"]}),"\n",(0,i.jsx)(r.p,{children:"The labels to be added to default metrics."}),"\n",(0,i.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"express.RequestHandler"})}),"\n",(0,i.jsx)(r.p,{children:"The Express request handler function."})]})}function p(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>l,x:()=>c});var s=t(6540);const i={},d=s.createContext(i);function l(e){const r=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(d.Provider,{value:r},e.children)}}}]);