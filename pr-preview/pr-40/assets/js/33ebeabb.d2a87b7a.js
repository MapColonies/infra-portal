"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[5450],{5273:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"knowledge-base/ts-server-boilerplate/repo","title":"Repo configuration and validation","description":"In order to make the boilerplate tick, we have many configuration files and scripts that help us maintain the codebase. This document will guide you through all of them.","source":"@site/docs/knowledge-base/ts-server-boilerplate/repo.md","sourceDirName":"knowledge-base/ts-server-boilerplate","slug":"/knowledge-base/ts-server-boilerplate/repo","permalink":"/infra-portal/pr-preview/pr-40/docs/knowledge-base/ts-server-boilerplate/repo","draft":false,"unlisted":false,"editUrl":"https://github.com/MapColonies/infra-portal/tree/master/docs/knowledge-base/ts-server-boilerplate/repo.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"repo","title":"Repo configuration and validation","sidebar_position":3},"sidebar":"knowledgeBaseSidebar","previous":{"title":"Tests","permalink":"/infra-portal/pr-preview/pr-40/docs/knowledge-base/ts-server-boilerplate/tests"}}');var s=i(4848),t=i(8453);const r={id:"repo",title:"Repo configuration and validation",sidebar_position:3},c=void 0,l={},a=[{value:"Dependabot",id:"dependabot",level:2},{value:"workflows",id:"workflows",level:2},{value:"Husky",id:"husky",level:2},{value:"VSCode settings",id:"vscode-settings",level:2},{value:"Settings",id:"settings",level:3},{value:"Launch options",id:"launch-options",level:3},{value:"Extensions",id:"extensions",level:3},{value:"EditorConfig",id:"editorconfig",level:2},{value:"gitignore and gitattributes",id:"gitignore-and-gitattributes",level:2},{value:"npmrc",id:"npmrc",level:2},{value:"nvmrc",id:"nvmrc",level:2},{value:"prettier",id:"prettier",level:2},{value:"ESLint",id:"eslint",level:2},{value:"redocly",id:"redocly",level:2},{value:"commitlint",id:"commitlint",level:2},{value:"Release please",id:"release-please",level:2},{value:"package.json",id:"packagejson",level:2},{value:"tsconfig",id:"tsconfig",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"In order to make the boilerplate tick, we have many configuration files and scripts that help us maintain the codebase. This document will guide you through all of them."}),"\n",(0,s.jsx)(n.h2,{id:"dependabot",children:"Dependabot"}),"\n",(0,s.jsxs)(n.p,{children:["Dependabot is a GitHub app that checks for outdated dependencies in your repository and creates pull requests to update them. The configuration file for Dependabot is located in the ",(0,s.jsx)(n.code,{children:".github"})," directory.\nIf you need to change the configuration, you can do so by editing the ",(0,s.jsx)(n.code,{children:".github/dependabot.yml"})," file.\nFor reference on how to configure Dependabot, check the ",(0,s.jsx)(n.a,{href:"https://docs.github.com/en/code-security/dependabot/working-with-dependabot/dependabot-options-reference",children:"official documentation"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"workflows",children:"workflows"}),"\n",(0,s.jsxs)(n.p,{children:["The workflows for GitHub Actions are located in the ",(0,s.jsx)(n.code,{children:".github/workflows"})," directory. The boilerplate includes the following workflows:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"build-and-push.yaml"}),": This workflow is triggered when a new version is released. It builds the Docker image and pushes it to the Docker registry."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pull_request.yaml"}),": This workflow is triggered when a pull request is opened. It runs the tests and checks the code style."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"release-please.yaml"})," This workflow manages the release of the package using ",(0,s.jsx)(n.a,{href:"https://github.com/googleapis/release-please",children:"release-please"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For more information check the ",(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(2988).A+"",children:"Pipelines docs"})]}),"\n",(0,s.jsx)(n.h2,{id:"husky",children:"Husky"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://typicode.github.io/husky/",children:"Husky"})," is a tool that allows you to run scripts before committing or pushing code to the repository by setting ",(0,s.jsx)(n.a,{href:"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks",children:"git hooks"}),". The configuration file for Husky is located in the ",(0,s.jsx)(n.code,{children:".husky"})," directory."]}),"\n",(0,s.jsx)(n.p,{children:"The boilerplate includes the following hooks:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pre-commit"}),": Runs ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/pretty-quick",children:"pretty-quick"})," to format the staged files."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"commit-msg"}),": Runs the commitlint to check if the commit message follows the MapColonies commit specification."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"vscode-settings",children:"VSCode settings"}),"\n",(0,s.jsx)(n.h3,{id:"settings",children:"Settings"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".vscode/settings.json"})," file contains workspace-specific settings that help maintain consistent code style across the team:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"typescript.tsdk"}),": Points to the local TypeScript installation to ensure consistent TypeScript version usage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"files.eol"}),": Sets line endings to LF (",(0,s.jsx)(n.code,{children:"\\n"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"editor.defaultFormatter"}),": Uses Prettier as the default formatter"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"files.insertFinalNewline"}),": Ensures all files end with a newline"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"launch-options",children:"Launch options"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".vscode/launch.json"})," file contains configurations for debugging the application in VSCode."]}),"\n",(0,s.jsx)(n.h3,{id:"extensions",children:"Extensions"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".vscode/extensions.json"})," file contains recommended extensions for this project:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"redhat.vscode-yaml"}),": YAML language support"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Redocly.openapi-vs-code"}),": OpenAPI (Swagger) editor"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"esbenp.prettier-vscode"}),": Code formatting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Tim-Koehler.helm-intellisense"}),": Helm charts support"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"42Crunch.vscode-openapi"}),": OpenAPI design and validation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"dbaeumer.vscode-eslint"}),": JavaScript/TypeScript linting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ms-azuretools.vscode-docker"}),": Docker support"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ms-kubernetes-tools.vscode-kubernetes-tools"}),": Kubernetes support"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ms-azuretools.vscode-azureresourcegroups"}),": Azure Resource Groups management"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ms-azuretools.vscode-azurevirtualmachines"}),": Azure Virtual Machines management"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"editorconfig",children:"EditorConfig"}),"\n",(0,s.jsxs)(n.p,{children:["EditorConfig is a tool that helps maintain consistent coding styles for multiple developers working on the same project across various editors and IDEs. The configuration file for EditorConfig is located in the ",(0,s.jsx)(n.code,{children:".editorconfig"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".editorconfig"})," file contains settings that should be consistent across all of MapColonies\u2122 projects, such as: end-of-line characters, indentation, and charset."]}),"\n",(0,s.jsxs)(n.p,{children:["For more information on how to configure EditorConfig, check the ",(0,s.jsx)(n.a,{href:"https://editorconfig.org/",children:"official documentation"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"gitignore-and-gitattributes",children:"gitignore and gitattributes"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".gitignore"})," file contains a list of files and directories that should be ignored by Git."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".gitattributes"})," file contains attributes for paths in the repository. Using this file we make sure each file eol is LF."]}),"\n",(0,s.jsxs)(n.p,{children:["For more information on how to configure ",(0,s.jsx)(n.code,{children:".gitignore"})," and ",(0,s.jsx)(n.code,{children:".gitattributes"}),", check the ",(0,s.jsx)(n.a,{href:"https://git-scm.com/docs/gitignore",children:"gitignore documentation"})," and ",(0,s.jsx)(n.a,{href:"https://git-scm.com/docs/gitattributes",children:"gitattributes documentation"})," respectively."]}),"\n",(0,s.jsx)(n.h2,{id:"npmrc",children:"npmrc"}),"\n",(0,s.jsxs)(n.p,{children:["We use the npmrc file to make sure npm enforces the engine versions mandated by the dependencies in the package.json file. If needed, you can add more configurations to the ",(0,s.jsx)(n.code,{children:".npmrc"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["For complete documentation, check the ",(0,s.jsx)(n.a,{href:"https://docs.npmjs.com/cli/v11/configuring-npm/npmrc",children:"npmrc documentation"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"nvmrc",children:"nvmrc"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/nvm-sh/nvm",children:"nvm"}),", short for Node Version Manager, is a tool that allows you to install and manage multiple versions of Node.js on the same machine. The ",(0,s.jsx)(n.code,{children:".nvmrc"})," file contains the Node.js version that should be used for this project."]}),"\n",(0,s.jsxs)(n.p,{children:["Run the following command in the repository root directory to use the Node.js version specified in the ",(0,s.jsx)(n.code,{children:".nvmrc"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"nvm use\n"})}),"\n",(0,s.jsx)(n.h2,{id:"prettier",children:"prettier"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://prettier.io/docs/",children:"Prettier"})," is an opinionated code formatter that enforces a consistent code style across your codebase. The configuration file for Prettier is located in the ",(0,s.jsx)(n.code,{children:".prettierrc"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["If you need to change the configuration, you can do so by editing the ",(0,s.jsx)(n.code,{children:".prettierrc"})," file. If you want to ignore some files or directories from being formatted by Prettier, you can add them to the ",(0,s.jsx)(n.code,{children:".prettierignore"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["The configuration is taken from the ",(0,s.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-40/docs/knowledge-base/packages/prettier-config/",children:"MapColonies\u2122 Prettier configuration"})," package."]}),"\n",(0,s.jsx)(n.p,{children:"To check if the code is formatted correctly, run the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run format\n"})}),"\n",(0,s.jsx)(n.p,{children:"To format the code, run the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run format:fix\n"})}),"\n",(0,s.jsx)(n.h2,{id:"eslint",children:"ESLint"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://eslint.org/docs/user-guide/getting-started",children:"ESLint"})," is a tool that helps you find and fix problems in your TypeScript code. The configuration file for ESLint is located in the ",(0,s.jsx)(n.code,{children:"eslint.config.mjs"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["The configuration is taken from the ",(0,s.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-40/docs/knowledge-base/packages/eslint-config/",children:"MapColonies\u2122 ESLint configuration"})," package."]}),"\n",(0,s.jsx)(n.p,{children:"To check if the code is linted correctly, run the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run lint\n"})}),"\n",(0,s.jsx)(n.p,{children:"To fix the linting auto fixable issues, run the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run lint:fix\n"})}),"\n",(0,s.jsx)(n.h2,{id:"redocly",children:"redocly"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".redocly.yaml"})," files contains the configuration for the linting of the openapi specification file.\nThe linting is done using the ",(0,s.jsx)(n.a,{href:"https://redocly.com/docs/cli",children:"@redocly/cli"})," package."]}),"\n",(0,s.jsx)(n.p,{children:"To check if the openapi specification file is linted correctly, run the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run lint:openapi\n"})}),"\n",(0,s.jsx)(n.h2,{id:"commitlint",children:"commitlint"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://commitlint.js.org/",children:"commitlint"})," is a tool that checks if your commit messages meet the conventional commit format. The configuration file for commitlint is located in the ",(0,s.jsx)(n.code,{children:"commitlint.config.js"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["The configuration is taken from the ",(0,s.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-40/docs/knowledge-base/packages/commitlint-config/",children:"MapColonies\u2122 commitlint configuration"})," package."]}),"\n",(0,s.jsx)(n.h2,{id:"release-please",children:"Release please"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/googleapis/release-please",children:"Release please"})," is a tool that helps you manage the release of your package. The configuration file for release please is located in the ",(0,s.jsx)(n.code,{children:"release-please-config.json"})," and ",(0,s.jsx)(n.code,{children:".release-please-manifest.json"})," files."]}),"\n",(0,s.jsx)(n.h2,{id:"packagejson",children:"package.json"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"package.json"})," file contains the metadata for the project, including the project name, version, and dependencies. It also contains the scripts that can be run using npm."]}),"\n",(0,s.jsxs)(n.p,{children:["For more information on how to configure the ",(0,s.jsx)(n.code,{children:"package.json"})," file, check the ",(0,s.jsx)(n.a,{href:"https://docs.npmjs.com/cli/v11/configuring-npm/package-json",children:"official npm documentation"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"tsconfig",children:"tsconfig"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"tsconfig.json"})," file contains the configuration for the TypeScript compiler. The configuration is taken from the ",(0,s.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-40/docs/knowledge-base/packages/tsconfig/",children:"MapColonies\u2122 TypeScript configuration"})," package."]}),"\n",(0,s.jsx)(n.p,{children:"There are two main configurations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tsconfig.json"})," - The base configuration file, used for the IDE, testing and linting."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tsconfig.build.json"})," - The build configuration file, used for the build process."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},2988:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/files/_category_-86f8b8a766fad1049e7d162c840a214a.json"},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var o=i(6540);const s={},t=o.createContext(s);function r(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);