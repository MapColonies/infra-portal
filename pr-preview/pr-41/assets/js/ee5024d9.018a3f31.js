"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[7185],{2822:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"knowledge-base/packages/telemetry/typedoc/Main/classes/Tracing","title":"Tracing","description":"@map-colonies/telemetry v10.0.1","source":"@site/docs/knowledge-base/packages/telemetry/typedoc/Main/classes/Tracing.md","sourceDirName":"knowledge-base/packages/telemetry/typedoc/Main/classes","slug":"/knowledge-base/packages/telemetry/typedoc/Main/classes/Tracing","permalink":"/infra-portal/pr-preview/pr-41/docs/knowledge-base/packages/telemetry/typedoc/Main/classes/Tracing","draft":false,"unlisted":false,"editUrl":"https://github.com/MapColonies/infra-portal/tree/master/docs/knowledge-base/packages/telemetry/typedoc/Main/classes/Tracing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"knowledgeBaseSidebar","previous":{"title":"MetricsOptions","permalink":"/infra-portal/pr-preview/pr-41/docs/knowledge-base/packages/telemetry/typedoc/Main/interfaces/MetricsOptions"},"next":{"title":"TracingOptions","permalink":"/infra-portal/pr-preview/pr-41/docs/knowledge-base/packages/telemetry/typedoc/Main/interfaces/TracingOptions"}}');var s=t(4848),r=t(8453);const a={},l=void 0,c={},o=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new Tracing()",id:"new-tracing",level:3},{value:"Parameters",id:"parameters",level:4},{value:"options",id:"options",level:5},{value:"attributes",id:"attributes",level:6},{value:"autoInstrumentationsConfigMap",id:"autoinstrumentationsconfigmap",level:6},{value:"debug",id:"debug",level:6},{value:"hostname",id:"hostname",level:6},{value:"instrumentations",id:"instrumentations",level:6},{value:"isEnabled",id:"isenabled",level:6},{value:"serviceName",id:"servicename",level:6},{value:"serviceVersion",id:"serviceversion",level:6},{value:"traceRatio",id:"traceratio",level:6},{value:"url",id:"url",level:6},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"start()",id:"start",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Implementation of",id:"implementation-of",level:4},{value:"stop()",id:"stop",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Implementation of",id:"implementation-of-1",level:4}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-41/docs/knowledge-base/packages/telemetry/typedoc/",children:(0,s.jsx)(n.strong,{children:"@map-colonies/telemetry v10.0.1"})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"class-tracing",children:"Class: Tracing"}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/c90d27e434a800db9ddea582138e9a4370982b9b/src/tracing/tracing.ts#L41",children:"tracing/tracing.ts:41"})]}),"\n",(0,s.jsx)(n.p,{children:"Represents a Tracing instance that provides telemetry functionality."}),"\n",(0,s.jsx)(n.h2,{id:"implements",children:"Implements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TelemetryBase"}),"<",(0,s.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-tracing",children:"new Tracing()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new Tracing"}),"(",(0,s.jsx)(n.code,{children:"options"}),"): ",(0,s.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-41/docs/knowledge-base/packages/telemetry/typedoc/Main/classes/Tracing",children:(0,s.jsx)(n.code,{children:"Tracing"})})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/c90d27e434a800db9ddea582138e9a4370982b9b/src/tracing/tracing.ts#L52",children:"tracing/tracing.ts:52"})]}),"\n",(0,s.jsx)(n.p,{children:"Creates a new instance of the Tracing class."}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"options",children:"options"}),"\n",(0,s.jsx)(n.p,{children:"The options to configure the tracing functionality."}),"\n",(0,s.jsx)(n.h6,{id:"attributes",children:"attributes"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Attributes"})}),"\n",(0,s.jsx)(n.p,{children:"Optional attributes to be added to the resource."}),"\n",(0,s.jsx)(n.h6,{id:"autoinstrumentationsconfigmap",children:"autoInstrumentationsConfigMap"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"InstrumentationConfigMap"})}),"\n",(0,s.jsx)(n.p,{children:"Optional map of auto-instrumentation configurations."}),"\n",(0,s.jsx)(n.h6,{id:"debug",children:"debug"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Optional flag to enable debug mode."}),"\n",(0,s.jsx)(n.h6,{id:"hostname",children:"hostname"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The value of the hostname attribute to use, will override the hostname."}),"\n",(0,s.jsx)(n.h6,{id:"instrumentations",children:"instrumentations"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Instrumentation"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Optional array of instrumentations."}),"\n",(0,s.jsx)(n.h6,{id:"isenabled",children:"isEnabled"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Specifies whether tracing is enabled."}),"\n",(0,s.jsx)(n.h6,{id:"servicename",children:"serviceName"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The name of the service to put as attribute.\nBy default will be read from the package.json file."}),"\n",(0,s.jsx)(n.h6,{id:"serviceversion",children:"serviceVersion"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The version of the service to put as attribute.\nBy default will be read from the package.json file."}),"\n",(0,s.jsx)(n.h6,{id:"traceratio",children:"traceRatio"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"The ratio of traces to sample."}),"\n",(0,s.jsx)(n.h6,{id:"url",children:"url"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The URL to an HTTP OTLP endpoint to send the traces to."}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/infra-portal/pr-preview/pr-41/docs/knowledge-base/packages/telemetry/typedoc/Main/classes/Tracing",children:(0,s.jsx)(n.code,{children:"Tracing"})})}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"start",children:"start()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"start"}),"(): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/c90d27e434a800db9ddea582138e9a4370982b9b/src/tracing/tracing.ts#L63",children:"tracing/tracing.ts:63"})]}),"\n",(0,s.jsx)(n.p,{children:"Starts the tracing functionality."}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"TelemetryBase.start"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"stop",children:"stop()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"stop"}),"(): ",(0,s.jsx)(n.code,{children:"Promise"}),"<",(0,s.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/MapColonies/telemetry/blob/c90d27e434a800db9ddea582138e9a4370982b9b/src/tracing/tracing.ts#L108",children:"tracing/tracing.ts:108"})]}),"\n",(0,s.jsx)(n.p,{children:"Stops the tracing functionality."}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Promise"}),"<",(0,s.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"A promise that resolves when the tracing is stopped."}),"\n",(0,s.jsx)(n.h4,{id:"implementation-of-1",children:"Implementation of"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"TelemetryBase.stop"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);