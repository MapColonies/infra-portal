"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[8255],{466:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"knowledge-base/packages/error-express-handler/typedoc/functions/getErrorHandlerMiddleware","title":"getErrorHandlerMiddleware","description":"@map-colonies/error-express-handler","source":"@site/docs/knowledge-base/packages/error-express-handler/typedoc/functions/getErrorHandlerMiddleware.md","sourceDirName":"knowledge-base/packages/error-express-handler/typedoc/functions","slug":"/knowledge-base/packages/error-express-handler/typedoc/functions/getErrorHandlerMiddleware","permalink":"/infra-portal/pr-preview/pr-41/docs/knowledge-base/packages/error-express-handler/typedoc/functions/getErrorHandlerMiddleware","draft":false,"unlisted":false,"editUrl":"https://github.com/MapColonies/infra-portal/tree/master/docs/knowledge-base/packages/error-express-handler/typedoc/functions/getErrorHandlerMiddleware.md","tags":[],"version":"current","frontMatter":{},"sidebar":"knowledgeBaseSidebar","previous":{"title":"HttpError","permalink":"/infra-portal/pr-preview/pr-41/docs/knowledge-base/packages/error-express-handler/typedoc/interfaces/HttpError"},"next":{"title":"ESLint config","permalink":"/infra-portal/pr-preview/pr-41/docs/knowledge-base/packages/eslint-config/"}}');var o=n(4848),t=n(8453);const a={},d=void 0,l={},i=[{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}];function p(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.p,{children:(0,o.jsx)(r.a,{href:"/infra-portal/pr-preview/pr-41/docs/knowledge-base/packages/error-express-handler/typedoc/",children:(0,o.jsx)(r.strong,{children:"@map-colonies/error-express-handler"})})}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsx)(r.h1,{id:"function-geterrorhandlermiddleware",children:"Function: getErrorHandlerMiddleware()"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"getErrorHandlerMiddleware"}),"(): ",(0,o.jsx)(r.code,{children:"ErrorRequestHandler"})]}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:["Defined in: ",(0,o.jsx)(r.a,{href:"https://github.com/MapColonies/error-express-handler/blob/6181d6ffbe77f64ada9693499f729a5d7b2d4b2a/src/index.ts#L52",children:"index.ts:52"})]}),"\n",(0,o.jsx)(r.p,{children:"Creates an Express error-handling middleware function."}),"\n",(0,o.jsx)(r.p,{children:"This middleware function handles errors that occur during the processing of requests.\nIt formats the error response and sets the appropriate HTTP status code."}),"\n",(0,o.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.code,{children:"ErrorRequestHandler"})}),"\n",(0,o.jsx)(r.p,{children:"An Express error-handling middleware function."}),"\n",(0,o.jsx)(r.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"import express from 'express';\nimport { getErrorHandlerMiddleware } from './path/to/this/module';\n\nconst app = express();\n\n// Other middleware and routes\n\n// Error handling middleware should be added last\napp.use(getErrorHandlerMiddleware());\n\napp.listen(3000, () => {\n  console.log('Server is running on port 3000');\n});\n"})})]})}function c(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>d});var s=n(6540);const o={},t=s.createContext(o);function a(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);