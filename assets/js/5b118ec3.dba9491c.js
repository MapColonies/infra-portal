"use strict";(self.webpackChunkinfra_portal=self.webpackChunkinfra_portal||[]).push([[5299],{4365:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>a,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"knowledge-base/packages/js-logger/typedoc/interfaces/LoggerOptions","title":"LoggerOptions","description":"@map-colonies/js-logger","source":"@site/docs/knowledge-base/packages/js-logger/typedoc/interfaces/LoggerOptions.md","sourceDirName":"knowledge-base/packages/js-logger/typedoc/interfaces","slug":"/knowledge-base/packages/js-logger/typedoc/interfaces/LoggerOptions","permalink":"/infra-portal/docs/knowledge-base/packages/js-logger/typedoc/interfaces/LoggerOptions","draft":false,"unlisted":false,"editUrl":"https://github.com/MapColonies/infra-portal/tree/master/docs/knowledge-base/packages/js-logger/typedoc/interfaces/LoggerOptions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"knowledgeBaseSidebar","previous":{"title":"index","permalink":"/infra-portal/docs/knowledge-base/packages/js-logger/typedoc/"},"next":{"title":"Logger","permalink":"/infra-portal/docs/knowledge-base/packages/js-logger/typedoc/type-aliases/Logger"}}');var l=s(4848),i=s(8453);const r={},d=void 0,t={},c=[{value:"Properties",id:"properties",level:2},{value:"base?",id:"base",level:3},{value:"enabled?",id:"enabled",level:3},{value:"hooks?",id:"hooks",level:3},{value:"logMethod()?",id:"logmethod",level:4},{value:"Parameters",id:"parameters",level:5},{value:"this",id:"this",level:6},{value:"args",id:"args",level:6},{value:"method",id:"method",level:6},{value:"level",id:"level",level:6},{value:"Returns",id:"returns",level:5},{value:"level?",id:"level-1",level:3},{value:"mixin?",id:"mixin",level:3},{value:"pinoCaller?",id:"pinocaller",level:3},{value:"prettyPrint?",id:"prettyprint",level:3},{value:"redact?",id:"redact",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",hr:"hr",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"/infra-portal/docs/knowledge-base/packages/js-logger/typedoc/",children:(0,l.jsx)(n.strong,{children:"@map-colonies/js-logger"})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h1,{id:"interface-loggeroptions",children:"Interface: LoggerOptions"}),"\n",(0,l.jsxs)(n.p,{children:["Defined in: ",(0,l.jsx)(n.a,{href:"https://github.com/MapColonies/js-logger/blob/e0d5252e08f02fcd22776e4f198390292494e65b/src/index.ts#L7",children:"index.ts:7"})]}),"\n",(0,l.jsx)(n.p,{children:"Options for configuring the logger."}),"\n",(0,l.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(n.h3,{id:"base",children:"base?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"base"}),": ",(0,l.jsx)(n.code,{children:"null"})," | {}"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Defined in: ",(0,l.jsx)(n.a,{href:"https://github.com/MapColonies/js-logger/blob/e0d5252e08f02fcd22776e4f198390292494e65b/src/index.ts#L27",children:"index.ts:27"})]}),"\n",(0,l.jsx)(n.p,{children:"Base properties to include in log output."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"enabled",children:"enabled?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"enabled"}),": ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Defined in: ",(0,l.jsx)(n.a,{href:"https://github.com/MapColonies/js-logger/blob/e0d5252e08f02fcd22776e4f198390292494e65b/src/index.ts#L11",children:"index.ts:11"})]}),"\n",(0,l.jsx)(n.p,{children:"Determines if logging is enabled."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"hooks",children:"hooks?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"hooks"}),": ",(0,l.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Defined in: ",(0,l.jsx)(n.a,{href:"https://github.com/MapColonies/js-logger/blob/e0d5252e08f02fcd22776e4f198390292494e65b/src/index.ts#L23",children:"index.ts:23"})]}),"\n",(0,l.jsx)(n.p,{children:"Hooks for customizing log behavior."}),"\n",(0,l.jsx)(n.h4,{id:"logmethod",children:"logMethod()?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"logMethod"}),": (",(0,l.jsx)(n.code,{children:"this"}),", ",(0,l.jsx)(n.code,{children:"args"}),", ",(0,l.jsx)(n.code,{children:"method"}),", ",(0,l.jsx)(n.code,{children:"level"}),") => ",(0,l.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Allows for manipulating the parameters passed to logger methods. The signature for this hook is\nlogMethod (args, method, level) {}, where args is an array of the arguments that were passed to the\nlog method and method is the log method itself, and level is the log level. This hook must invoke the method function by\nusing apply, like so: method.apply(this, newArgumentsArray)."}),"\n",(0,l.jsx)(n.h5,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsx)(n.h6,{id:"this",children:"this"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"Logger"}),"<",(0,l.jsx)(n.code,{children:"never"}),", ",(0,l.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,l.jsx)(n.h6,{id:"args",children:"args"}),"\n",(0,l.jsxs)(n.p,{children:["[",(0,l.jsx)(n.code,{children:"string"}),", ",(0,l.jsx)(n.code,{children:"...args: any[]"}),"]"]}),"\n",(0,l.jsx)(n.h6,{id:"method",children:"method"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"LogFn"})}),"\n",(0,l.jsx)(n.h6,{id:"level",children:"level"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"number"})}),"\n",(0,l.jsx)(n.h5,{id:"returns",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"void"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"level-1",children:"level?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"level"}),": ",(0,l.jsx)(n.code,{children:"LevelWithSilentOrString"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Defined in: ",(0,l.jsx)(n.a,{href:"https://github.com/MapColonies/js-logger/blob/e0d5252e08f02fcd22776e4f198390292494e65b/src/index.ts#L15",children:"index.ts:15"})]}),"\n",(0,l.jsx)(n.p,{children:"Specifies the logging level."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"mixin",children:"mixin?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"mixin"}),": ",(0,l.jsx)(n.code,{children:"MixinFn"}),"<",(0,l.jsx)(n.code,{children:"never"}),">"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Defined in: ",(0,l.jsx)(n.a,{href:"https://github.com/MapColonies/js-logger/blob/e0d5252e08f02fcd22776e4f198390292494e65b/src/index.ts#L31",children:"index.ts:31"})]}),"\n",(0,l.jsx)(n.p,{children:"Function to add custom properties to log output."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pinocaller",children:"pinoCaller?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"pinoCaller"}),": ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Defined in: ",(0,l.jsx)(n.a,{href:"https://github.com/MapColonies/js-logger/blob/e0d5252e08f02fcd22776e4f198390292494e65b/src/index.ts#L39",children:"index.ts:39"})]}),"\n",(0,l.jsx)(n.p,{children:"Includes the caller's file and line number in log output."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"prettyprint",children:"prettyPrint?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"prettyPrint"}),": ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Defined in: ",(0,l.jsx)(n.a,{href:"https://github.com/MapColonies/js-logger/blob/e0d5252e08f02fcd22776e4f198390292494e65b/src/index.ts#L35",children:"index.ts:35"})]}),"\n",(0,l.jsx)(n.p,{children:"Enables pretty-printing of log output."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"redact",children:"redact?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"redact"}),": ",(0,l.jsx)(n.code,{children:"string"}),"[] | ",(0,l.jsx)(n.code,{children:"redactOptions"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Defined in: ",(0,l.jsx)(n.a,{href:"https://github.com/MapColonies/js-logger/blob/e0d5252e08f02fcd22776e4f198390292494e65b/src/index.ts#L19",children:"index.ts:19"})]}),"\n",(0,l.jsx)(n.p,{children:"Defines paths to redact from log output."})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var o=s(6540);const l={},i=o.createContext(l);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);